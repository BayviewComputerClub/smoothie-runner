// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test-data/test-data.proto

package test_data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestDataBatchCase struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	ExpectedOutput       string   `protobuf:"bytes,2,opt,name=expectedOutput,proto3" json:"expectedOutput,omitempty"`
	BatchNum             int64    `protobuf:"varint,3,opt,name=batchNum,proto3" json:"batchNum,omitempty"`
	CaseNum              int64    `protobuf:"varint,4,opt,name=caseNum,proto3" json:"caseNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestDataBatchCase) Reset()         { *m = TestDataBatchCase{} }
func (m *TestDataBatchCase) String() string { return proto.CompactTextString(m) }
func (*TestDataBatchCase) ProtoMessage()    {}
func (*TestDataBatchCase) Descriptor() ([]byte, []int) {
	return fileDescriptor_61029ed08a29789a, []int{0}
}

func (m *TestDataBatchCase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestDataBatchCase.Unmarshal(m, b)
}
func (m *TestDataBatchCase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestDataBatchCase.Marshal(b, m, deterministic)
}
func (m *TestDataBatchCase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestDataBatchCase.Merge(m, src)
}
func (m *TestDataBatchCase) XXX_Size() int {
	return xxx_messageInfo_TestDataBatchCase.Size(m)
}
func (m *TestDataBatchCase) XXX_DiscardUnknown() {
	xxx_messageInfo_TestDataBatchCase.DiscardUnknown(m)
}

var xxx_messageInfo_TestDataBatchCase proto.InternalMessageInfo

func (m *TestDataBatchCase) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *TestDataBatchCase) GetExpectedOutput() string {
	if m != nil {
		return m.ExpectedOutput
	}
	return ""
}

func (m *TestDataBatchCase) GetBatchNum() int64 {
	if m != nil {
		return m.BatchNum
	}
	return 0
}

func (m *TestDataBatchCase) GetCaseNum() int64 {
	if m != nil {
		return m.CaseNum
	}
	return 0
}

type TestDataBatch struct {
	Case                 []*TestDataBatchCase `protobuf:"bytes,1,rep,name=case,proto3" json:"case,omitempty"`
	BatchNum             int64                `protobuf:"varint,2,opt,name=batchNum,proto3" json:"batchNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TestDataBatch) Reset()         { *m = TestDataBatch{} }
func (m *TestDataBatch) String() string { return proto.CompactTextString(m) }
func (*TestDataBatch) ProtoMessage()    {}
func (*TestDataBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_61029ed08a29789a, []int{1}
}

func (m *TestDataBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestDataBatch.Unmarshal(m, b)
}
func (m *TestDataBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestDataBatch.Marshal(b, m, deterministic)
}
func (m *TestDataBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestDataBatch.Merge(m, src)
}
func (m *TestDataBatch) XXX_Size() int {
	return xxx_messageInfo_TestDataBatch.Size(m)
}
func (m *TestDataBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_TestDataBatch.DiscardUnknown(m)
}

var xxx_messageInfo_TestDataBatch proto.InternalMessageInfo

func (m *TestDataBatch) GetCase() []*TestDataBatchCase {
	if m != nil {
		return m.Case
	}
	return nil
}

func (m *TestDataBatch) GetBatchNum() int64 {
	if m != nil {
		return m.BatchNum
	}
	return 0
}

type TestData struct {
	Batch                []*TestDataBatch `protobuf:"bytes,1,rep,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TestData) Reset()         { *m = TestData{} }
func (m *TestData) String() string { return proto.CompactTextString(m) }
func (*TestData) ProtoMessage()    {}
func (*TestData) Descriptor() ([]byte, []int) {
	return fileDescriptor_61029ed08a29789a, []int{2}
}

func (m *TestData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestData.Unmarshal(m, b)
}
func (m *TestData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestData.Marshal(b, m, deterministic)
}
func (m *TestData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestData.Merge(m, src)
}
func (m *TestData) XXX_Size() int {
	return xxx_messageInfo_TestData.Size(m)
}
func (m *TestData) XXX_DiscardUnknown() {
	xxx_messageInfo_TestData.DiscardUnknown(m)
}

var xxx_messageInfo_TestData proto.InternalMessageInfo

func (m *TestData) GetBatch() []*TestDataBatch {
	if m != nil {
		return m.Batch
	}
	return nil
}

func init() {
	proto.RegisterType((*TestDataBatchCase)(nil), "TestDataBatchCase")
	proto.RegisterType((*TestDataBatch)(nil), "TestDataBatch")
	proto.RegisterType((*TestData)(nil), "TestData")
}

func init() { proto.RegisterFile("test-data/test-data.proto", fileDescriptor_61029ed08a29789a) }

var fileDescriptor_61029ed08a29789a = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x49, 0x2d, 0x2e,
	0xd1, 0x4d, 0x49, 0x2c, 0x49, 0xd4, 0x87, 0xb3, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x95, 0xda,
	0x19, 0xb9, 0x04, 0x43, 0x52, 0x8b, 0x4b, 0x5c, 0x12, 0x4b, 0x12, 0x9d, 0x12, 0x4b, 0x92, 0x33,
	0x9c, 0x13, 0x8b, 0x53, 0x85, 0x44, 0xb8, 0x58, 0x33, 0xf3, 0x0a, 0x4a, 0x4b, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x21, 0x35, 0x2e, 0xbe, 0xd4, 0x8a, 0x82, 0xd4, 0xe4, 0x92,
	0xd4, 0x14, 0xff, 0xd2, 0x12, 0x90, 0x34, 0x13, 0x58, 0x1a, 0x4d, 0x54, 0x48, 0x8a, 0x8b, 0x23,
	0x09, 0x64, 0x94, 0x5f, 0x69, 0xae, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x9c, 0x2f, 0x24,
	0xc1, 0xc5, 0x9e, 0x9c, 0x58, 0x9c, 0x0a, 0x92, 0x62, 0x01, 0x4b, 0xc1, 0xb8, 0x4a, 0xc1, 0x5c,
	0xbc, 0x28, 0x0e, 0x11, 0x52, 0xe3, 0x62, 0x01, 0xc9, 0x49, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b,
	0x09, 0xe9, 0x61, 0x38, 0x33, 0x08, 0x2c, 0x8f, 0x62, 0x1d, 0x13, 0xaa, 0x75, 0x4a, 0x06, 0x5c,
	0x1c, 0x30, 0x6d, 0x42, 0x2a, 0x5c, 0xac, 0x60, 0x71, 0xa8, 0x81, 0x7c, 0xa8, 0x06, 0x06, 0x41,
	0x24, 0x93, 0xd8, 0xc0, 0xe1, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x5f, 0xed, 0x60,
	0x34, 0x01, 0x00, 0x00,
}
